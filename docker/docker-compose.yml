version: "1.0"
services:
  PostgreSQL-Container:
    container_name: "CarPart-PostgreSQL-Container"
    image: postgres:12.3-alpine
    restart: always
    working_dir: /car-part-db
    mem_limit: 1536MB
    mem_reservation: 1G
    ports:
      - "5430:5432"
    environment:
      POSTGRES_PASSWORD: "cp_PostgreSQL"
      POSTGRES_USER: "cp_usr"
      POSTGRES_DB: "CarPartDB_Docker"
      PG-DATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - ./1. Init Database:/docker-entrypoint-initdb.d
      - CarPart-DB-Data:/var/lib/postgresql/data
    networks:
      - car-part-networks
    healthcheck:
#      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      test: ["CMD-SHELL", "pg_isready -U cp_usr -d CarPartDB_Docker"]
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 10s

  PgAdmin-Container:
    container_name: "CarPart-PgAdmin-Container"
    image: dpage/pgadmin4:6.20
    restart: unless-stopped
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: "cp@hwdemo.com"
      PGADMIN_DEFAULT_PASSWORD: "cp_PgAdmin"
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - CarPart-PgAdmin-Data:/var/lib/pgadmin
    networks:
      - car-part-networks
    depends_on:
      - PostgreSQL-Container

volumes:
  CarPart-DB-Data:
  CarPart-PgAdmin-Data:

networks:
  car-part-networks:
    driver: bridge